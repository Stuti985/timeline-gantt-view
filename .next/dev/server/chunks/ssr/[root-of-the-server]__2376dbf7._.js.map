{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///E:/Timeline%20Gantt%20View/src/components/Timeline/TimelineView.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TimelineView = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineView() from the server but TimelineView is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Timeline/TimelineView.tsx <module evaluation>\",\n    \"TimelineView\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///E:/Timeline%20Gantt%20View/src/components/Timeline/TimelineView.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TimelineView = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineView() from the server but TimelineView is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Timeline/TimelineView.tsx\",\n    \"TimelineView\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,sDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///E:/Timeline%20Gantt%20View/src/data/sampleData.ts"],"sourcesContent":["\r\nimport { TimelineRow, TimelineTask } from '../types/timeline.types';\r\n\r\nexport const sampleRows: TimelineRow[] = [\r\n  { id: 'row-1', label: 'Frontend Team', avatar: '', tasks: ['task-1', 'task-2'] },\r\n  { id: 'row-2', label: 'Backend Team', avatar: '', tasks: ['task-3'] },\r\n  { id: 'row-3', label: 'Design Team', avatar: '', tasks: ['task-4'] }\r\n];\r\n\r\nexport const sampleTasks: Record<string, TimelineTask> = {\r\n  'task-1': {\r\n    id: 'task-1',\r\n    title: 'UI Component Development',\r\n    startDate: new Date(2024, 0, 1),\r\n    endDate: new Date(2024, 0, 15),\r\n    progress: 60,\r\n    assignee: 'Alice',\r\n    rowId: 'row-1',\r\n    dependencies: [],\r\n    color: '#3b82f6',\r\n    isMilestone: false\r\n  },\r\n  'task-2': {\r\n    id: 'task-2',\r\n    title: 'Integration Testing',\r\n    startDate: new Date(2024, 0, 16),\r\n    endDate: new Date(2024, 0, 25),\r\n    progress: 0,\r\n    assignee: 'Bob',\r\n    rowId: 'row-1',\r\n    dependencies: ['task-1', 'task-3'],\r\n    color: '#3b82f6',\r\n    isMilestone: false\r\n  },\r\n  'task-3': {\r\n    id: 'task-3',\r\n    title: 'API Development',\r\n    startDate: new Date(2024, 0, 1),\r\n    endDate: new Date(2024, 0, 14),\r\n    progress: 80,\r\n    assignee: 'Charlie',\r\n    rowId: 'row-2',\r\n    dependencies: [],\r\n    color: '#10b981',\r\n    isMilestone: false\r\n  },\r\n  'task-4': {\r\n    id: 'task-4',\r\n    title: 'Design System Update',\r\n    startDate: new Date(2024, 0, 5),\r\n    endDate: new Date(2024, 0, 12),\r\n    progress: 100,\r\n    assignee: 'Dana',\r\n    rowId: 'row-3',\r\n    dependencies: [],\r\n    color: '#f59e0b',\r\n    isMilestone: false\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;;;AAGO,MAAM,aAA4B;IACvC;QAAE,IAAI;QAAS,OAAO;QAAiB,QAAQ;QAAI,OAAO;YAAC;YAAU;SAAS;IAAC;IAC/E;QAAE,IAAI;QAAS,OAAO;QAAgB,QAAQ;QAAI,OAAO;YAAC;SAAS;IAAC;IACpE;QAAE,IAAI;QAAS,OAAO;QAAe,QAAQ;QAAI,OAAO;YAAC;SAAS;IAAC;CACpE;AAEM,MAAM,cAA4C;IACvD,UAAU;QACR,IAAI;QACJ,OAAO;QACP,WAAW,IAAI,KAAK,MAAM,GAAG;QAC7B,SAAS,IAAI,KAAK,MAAM,GAAG;QAC3B,UAAU;QACV,UAAU;QACV,OAAO;QACP,cAAc,EAAE;QAChB,OAAO;QACP,aAAa;IACf;IACA,UAAU;QACR,IAAI;QACJ,OAAO;QACP,WAAW,IAAI,KAAK,MAAM,GAAG;QAC7B,SAAS,IAAI,KAAK,MAAM,GAAG;QAC3B,UAAU;QACV,UAAU;QACV,OAAO;QACP,cAAc;YAAC;YAAU;SAAS;QAClC,OAAO;QACP,aAAa;IACf;IACA,UAAU;QACR,IAAI;QACJ,OAAO;QACP,WAAW,IAAI,KAAK,MAAM,GAAG;QAC7B,SAAS,IAAI,KAAK,MAAM,GAAG;QAC3B,UAAU;QACV,UAAU;QACV,OAAO;QACP,cAAc,EAAE;QAChB,OAAO;QACP,aAAa;IACf;IACA,UAAU;QACR,IAAI;QACJ,OAAO;QACP,WAAW,IAAI,KAAK,MAAM,GAAG;QAC7B,SAAS,IAAI,KAAK,MAAM,GAAG;QAC3B,UAAU;QACV,UAAU;QACV,OAAO;QACP,cAAc,EAAE;QAChB,OAAO;QACP,aAAa;IACf;AACF","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///E:/Timeline%20Gantt%20View/src/stores/timelineStore.ts"],"sourcesContent":["\r\nimport {create } from 'zustand';\r\nimport { TimelineRow, TimelineTask } from '../types/timeline.types';\r\nimport { sampleRows, sampleTasks } from '../data/sampleData';\r\n\r\ninterface TimelineState {\r\n  rows: TimelineRow[];\r\n  tasks: Record<string, TimelineTask>;\r\n  setRows: (rows: TimelineRow[]) => void;\r\n  setTasks: (tasks: Record<string, TimelineTask>) => void;\r\n  updateTask: (taskId: string, updates: Partial<TimelineTask>) => void;\r\n}\r\n\r\nexport const useTimelineStore = create<TimelineState>((set) => ({\r\n  rows: sampleRows,\r\n  tasks: sampleTasks,\r\n  setRows: (rows) => set({ rows }),\r\n  setTasks: (tasks) => set({ tasks }),\r\n  updateTask: (taskId, updates) => set((s) => ({ tasks: { ...s.tasks, [taskId]: { ...s.tasks[taskId], ...updates } } }))\r\n}));\r\n"],"names":[],"mappings":";;;;AACA;AAEA;;;AAUO,MAAM,mBAAmB,IAAA,kJAAM,EAAgB,CAAC,MAAQ,CAAC;QAC9D,MAAM,uIAAU;QAChB,OAAO,wIAAW;QAClB,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,UAAU,CAAC,QAAU,IAAI;gBAAE;YAAM;QACjC,YAAY,CAAC,QAAQ,UAAY,IAAI,CAAC,IAAM,CAAC;oBAAE,OAAO;wBAAE,GAAG,EAAE,KAAK;wBAAE,CAAC,OAAO,EAAE;4BAAE,GAAG,EAAE,KAAK,CAAC,OAAO;4BAAE,GAAG,OAAO;wBAAC;oBAAE;gBAAE,CAAC;IACtH,CAAC","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///E:/Timeline%20Gantt%20View/src/app/page.tsx"],"sourcesContent":["\r\nimport React from 'react';\r\nimport { TimelineView } from '../components/Timeline/TimelineView';\r\nimport { useTimelineStore } from '../stores/timelineStore';\r\n\r\nexport default function Page() {\r\n  const rows = useTimelineStore((s) => s.rows);\r\n  const tasks = useTimelineStore((s) => s.tasks);\r\n  const updateTask = useTimelineStore((s) => s.updateTask);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-semibold mb-4\">Timeline / Gantt Demo</h1>\r\n      <div className=\"bg-white p-4 rounded shadow\">\r\n        <TimelineView rows={rows} tasks={tasks} startDate={new Date(2024, 0, 1)} endDate={new Date(2024, 2, 31)} viewMode=\"week\" onTaskUpdate={(id, u) => updateTask(id, u)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;AAEe,SAAS;IACtB,MAAM,OAAO,IAAA,kJAAgB,EAAC,CAAC,IAAM,EAAE,IAAI;IAC3C,MAAM,QAAQ,IAAA,kJAAgB,EAAC,CAAC,IAAM,EAAE,KAAK;IAC7C,MAAM,aAAa,IAAA,kJAAgB,EAAC,CAAC,IAAM,EAAE,UAAU;IAEvD,qBACE,8OAAC;;0BACC,8OAAC;gBAAG,WAAU;0BAA8B;;;;;;0BAC5C,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,8JAAY;oBAAC,MAAM;oBAAM,OAAO;oBAAO,WAAW,IAAI,KAAK,MAAM,GAAG;oBAAI,SAAS,IAAI,KAAK,MAAM,GAAG;oBAAK,UAAS;oBAAO,cAAc,CAAC,IAAI,IAAM,WAAW,IAAI;;;;;;;;;;;;;;;;;AAIzK","debugId":null}}]
}